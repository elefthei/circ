Options { input_file_path: "jess/add.c", inputs: None, parties: None, maximize: false, proof_action: Count }
[circ::front::c] FunctionDefinition {
        specifiers: [
            Node {
                node: TypeSpecifier(
                    Node {
                        node: Int,
                        span: 134…137,
                    },
                ),
                span: 134…137,
            },
        ],
        declarator: Node {
            node: Declarator {
                kind: Node {
                    node: Identifier(
                        Node {
                            node: Identifier {
                                name: "main",
                            },
                            span: 138…142,
                        },
                    ),
                    span: 138…142,
                },
                derived: [
                    Node {
                        node: Function(
                            Node {
                                node: FunctionDeclarator {
                                    parameters: [
                                        Node {
                                            node: ParameterDeclaration {
                                                specifiers: [
                                                    Node {
                                                        node: Extension(
                                                            [
                                                                Node {
                                                                    node: Attribute(
                                                                        Attribute {
                                                                            name: Node {
                                                                                node: "public",
                                                                                span: 158…164,
                                                                            },
                                                                            arguments: [
                                                                                Node {
                                                                                    node: Constant(
                                                                                        Node {
                                                                                            node: Integer(
                                                                                                Integer {
                                                                                                    base: Decimal,
                                                                                                    number: "0",
                                                                                                    suffix: IntegerSuffix {
                                                                                                        size: Int,
                                                                                                        unsigned: false,
                                                                                                        imaginary: false,
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                            span: 165…166,
                                                                                        },
                                                                                    ),
                                                                                    span: 165…166,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    span: 158…167,
                                                                },
                                                            ],
                                                        ),
                                                        span: 143…169,
                                                    },
                                                    Node {
                                                        node: TypeSpecifier(
                                                            Node {
                                                                node: Int,
                                                                span: 170…173,
                                                            },
                                                        ),
                                                        span: 170…173,
                                                    },
                                                ],
                                                declarator: Some(
                                                    Node {
                                                        node: Declarator {
                                                            kind: Node {
                                                                node: Identifier(
                                                                    Node {
                                                                        node: Identifier {
                                                                            name: "a",
                                                                        },
                                                                        span: 174…175,
                                                                    },
                                                                ),
                                                                span: 174…175,
                                                            },
                                                            derived: [],
                                                            extensions: [],
                                                        },
                                                        span: 174…175,
                                                    },
                                                ),
                                                extensions: [],
                                            },
                                            span: 143…175,
                                        },
                                        Node {
                                            node: ParameterDeclaration {
                                                specifiers: [
                                                    Node {
                                                        node: Extension(
                                                            [
                                                                Node {
                                                                    node: Attribute(
                                                                        Attribute {
                                                                            name: Node {
                                                                                node: "public",
                                                                                span: 192…198,
                                                                            },
                                                                            arguments: [
                                                                                Node {
                                                                                    node: Constant(
                                                                                        Node {
                                                                                            node: Integer(
                                                                                                Integer {
                                                                                                    base: Decimal,
                                                                                                    number: "0",
                                                                                                    suffix: IntegerSuffix {
                                                                                                        size: Int,
                                                                                                        unsigned: false,
                                                                                                        imaginary: false,
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                            span: 199…200,
                                                                                        },
                                                                                    ),
                                                                                    span: 199…200,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    span: 192…201,
                                                                },
                                                            ],
                                                        ),
                                                        span: 177…203,
                                                    },
                                                    Node {
                                                        node: TypeSpecifier(
                                                            Node {
                                                                node: Int,
                                                                span: 204…207,
                                                            },
                                                        ),
                                                        span: 204…207,
                                                    },
                                                ],
                                                declarator: Some(
                                                    Node {
                                                        node: Declarator {
                                                            kind: Node {
                                                                node: Identifier(
                                                                    Node {
                                                                        node: Identifier {
                                                                            name: "b",
                                                                        },
                                                                        span: 208…209,
                                                                    },
                                                                ),
                                                                span: 208…209,
                                                            },
                                                            derived: [],
                                                            extensions: [],
                                                        },
                                                        span: 208…209,
                                                    },
                                                ),
                                                extensions: [],
                                            },
                                            span: 177…209,
                                        },
                                    ],
                                    ellipsis: None,
                                },
                                span: 143…209,
                            },
                        ),
                        span: 142…210,
                    },
                ],
                extensions: [],
            },
            span: 138…210,
        },
        declarations: [],
        statement: Node {
            node: Compound(
                [
                    Node {
                        node: Statement(
                            Node {
                                node: Return(
                                    Some(
                                        Node {
                                            node: BinaryOperator(
                                                Node {
                                                    node: BinaryOperatorExpression {
                                                        operator: Node {
                                                            node: Plus,
                                                            span: 224…225,
                                                        },
                                                        lhs: Node {
                                                            node: Identifier(
                                                                Node {
                                                                    node: Identifier {
                                                                        name: "a",
                                                                    },
                                                                    span: 222…223,
                                                                },
                                                            ),
                                                            span: 222…224,
                                                        },
                                                        rhs: Node {
                                                            node: Identifier(
                                                                Node {
                                                                    node: Identifier {
                                                                        name: "b",
                                                                    },
                                                                    span: 226…227,
                                                                },
                                                            ),
                                                            span: 226…227,
                                                        },
                                                    },
                                                    span: 222…227,
                                                },
                                            ),
                                            span: 222…227,
                                        },
                                    ),
                                ),
                                span: 215…228,
                            },
                        ),
                        span: 215…228,
                    },
                ],
            ),
            span: 211…230,
        },
    }
[circ::ir::term] Var: main_f0_lex0_a_v0 (visibility: None)
[circ::ir::term] Var: main_f0_lex0_b_v0 (visibility: None)
[circ::front::c] Ret stmt: Node {
        node: BinaryOperator(
            Node {
                node: BinaryOperatorExpression {
                    operator: Node {
                        node: Plus,
                        span: 224…225,
                    },
                    lhs: Node {
                        node: Identifier(
                            Node {
                                node: Identifier {
                                    name: "a",
                                },
                                span: 222…223,
                            },
                        ),
                        span: 222…224,
                    },
                    rhs: Node {
                        node: Identifier(
                            Node {
                                node: Identifier {
                                    name: "b",
                                },
                                span: 226…227,
                            },
                        ),
                        span: 226…227,
                    },
                },
                span: 222…227,
            },
        ),
        span: 222…227,
    }
[circ::ir::opt] Applying: Flatten
[circ::ir::opt] After Flatten: 6
[circ::ir::opt] Applying: Sha
[circ::ir::opt] After Sha: 6
[circ::ir::opt] Applying: ConstantFold
[circ::ir::opt] After ConstantFold: 3
[circ::ir::opt] Applying: Flatten
[circ::ir::opt] After Flatten: 3
[circ::ir::opt] Applying: Inline
[circ::ir::opt] After Inline: 3
[circ::ir::opt] Applying: Mem
[circ::ir::opt] After Mem: 3
[circ::ir::opt] Applying: Flatten
[circ::ir::opt] After Flatten: 3
[circ::ir::opt] Applying: ConstantFold
[circ::ir::opt] After ConstantFold: 3
[circ::ir::opt] Applying: Inline
[circ::ir::opt] After Inline: 3
[circ::ir::term] 4 of 8 terms collected
[circ::ir::term] 0 of 3 types collected
Done with IR optimization
Converting to r1cs
[circ::target::r1cs::trans] Term count: 3
Printing assertions
(bvadd main_f0_lex0_b_v0 main_f0_lex0_a_v0)
[circ::target::r1cs::trans] Assert: (let (
    ) (bvadd main_f0_lex0_b_v0 main_f0_lex0_a_v0))
    
[circ::target::r1cs::trans] Embed: (let (
    ) (bvadd main_f0_lex0_b_v0 main_f0_lex0_a_v0))
    
[circ::target::r1cs::trans] Embed op: main_f0_lex0_a_v0
[circ::target::r1cs::trans] Embed op: main_f0_lex0_b_v0
[circ::target::r1cs::trans] Embed op: bvadd
[circ::target::r1cs::trans] Bitify(33): +0 + 1main_f0_lex0_a_v0_v0 + 1main_f0_lex0_b_v0_v1
[circ::target::r1cs] Constraint:
        +0 + 1arith_b0_v2
      * -1 + 1arith_b0_v2
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b1_v3
      * -1 + 1arith_b1_v3
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b2_v4
      * -1 + 1arith_b2_v4
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b3_v5
      * -1 + 1arith_b3_v5
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b4_v6
      * -1 + 1arith_b4_v6
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b5_v7
      * -1 + 1arith_b5_v7
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b6_v8
      * -1 + 1arith_b6_v8
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b7_v9
      * -1 + 1arith_b7_v9
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b8_v10
      * -1 + 1arith_b8_v10
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b9_v11
      * -1 + 1arith_b9_v11
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b10_v12
      * -1 + 1arith_b10_v12
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b11_v13
      * -1 + 1arith_b11_v13
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b12_v14
      * -1 + 1arith_b12_v14
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b13_v15
      * -1 + 1arith_b13_v15
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b14_v16
      * -1 + 1arith_b14_v16
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b15_v17
      * -1 + 1arith_b15_v17
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b16_v18
      * -1 + 1arith_b16_v18
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b17_v19
      * -1 + 1arith_b17_v19
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b18_v20
      * -1 + 1arith_b18_v20
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b19_v21
      * -1 + 1arith_b19_v21
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b20_v22
      * -1 + 1arith_b20_v22
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b21_v23
      * -1 + 1arith_b21_v23
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b22_v24
      * -1 + 1arith_b22_v24
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b23_v25
      * -1 + 1arith_b23_v25
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b24_v26
      * -1 + 1arith_b24_v26
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b25_v27
      * -1 + 1arith_b25_v27
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b26_v28
      * -1 + 1arith_b26_v28
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b27_v29
      * -1 + 1arith_b27_v29
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b28_v30
      * -1 + 1arith_b28_v30
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b29_v31
      * -1 + 1arith_b29_v31
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b30_v32
      * -1 + 1arith_b30_v32
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b31_v33
      * -1 + 1arith_b31_v33
      = +0
[circ::target::r1cs] Constraint:
        +0 + 1arith_b32_v34
      * -1 + 1arith_b32_v34
      = +0
[circ::target::r1cs] Constraint:
        +0
      * +0
      = +0 + 134217728arith_b27_v29 - 1main_f0_lex0_a_v0_v0 + 8arith_b3_v5 + 16384arith_b14_v16 + 1024arith_b10_v12 - 1main_f0_lex0_b_v0_v1 + 512arith_b9_v11 + 32768arith_b15_v17 + 4294967296arith_b32_v34 + 268435456arith_b28_v30 + 256arith_b8_v10 + 2048arith_b11_v13 + 1arith_b0_v2 + 67108864arith_b26_v28 + 128arith_b7_v9 + 8192arith_b13_v15 + 64arith_b6_v8 + 16777216arith_b24_v26 + 33554432arith_b25_v27 + 65536arith_b16_v18 + 1048576arith_b20_v22 + 2arith_b1_v3 + 1073741824arith_b30_v32 + 4096arith_b12_v14 + 4194304arith_b22_v24 + 2097152arith_b21_v23 + 32arith_b5_v7 + 16arith_b4_v6 + 2147483648arith_b31_v33 + 131072arith_b17_v19 + 524288arith_b19_v21 + 536870912arith_b29_v31 + 4arith_b2_v4 + 8388608arith_b23_v25 + 262144arith_b18_v20
(bvadd main_f0_lex0_b_v0 main_f0_lex0_a_v0) as boolean
[circ::target::r1cs] Constraint:
        +0
      * +0
      = -1 + 128arith_b7_v9 + 32768arith_b15_v17 + 8388608arith_b23_v25 + 4arith_b2_v4 + 32arith_b5_v7 + 256arith_b8_v10 + 1024arith_b10_v12 + 64arith_b6_v8 + 65536arith_b16_v18 + 2097152arith_b21_v23 + 33554432arith_b25_v27 + 8arith_b3_v5 + 2048arith_b11_v13 + 8192arith_b13_v15 + 131072arith_b17_v19 + 67108864arith_b26_v28 + 4194304arith_b22_v24 + 16arith_b4_v6 + 536870912arith_b29_v31 + 2arith_b1_v3 + 512arith_b9_v11 + 262144arith_b18_v20 + 1073741824arith_b30_v32 + 524288arith_b19_v21 + 16777216arith_b24_v26 + 1arith_b0_v2 + 4096arith_b12_v14 + 16384arith_b14_v16 + 134217728arith_b27_v29 + 2147483648arith_b31_v33 + 1048576arith_b20_v22 + 268435456arith_b28_v30
Pre-opt R1cs size: 35
[circ::target::r1cs::opt] Elim: arith_b27_v29 -> +0 - 390677714162515032883344147415354593378980103884098215569583018868704main_f0_lex0_a_v0_v0 + 3125421713300120263066753179322836747031840831072785724556664150949632arith_b3_v5 + 6400863668838646298760710511253169657921210022037065163892048181144846336arith_b14_v16 + 400053979302415393672544406953323103620075626377316572743253011321552896arith_b10_v12 - 390677714162515032883344147415354593378980103884098215569583018868704main_f0_lex0_b_v0_v1 + 200026989651207696836272203476661551810037813188658286371626505660776448arith_b9_v11 + 12801727337677292597521421022506339315842420044074130327784096362289692672arith_b15_v17 - 32arith_b32_v34 - 2arith_b28_v30 + 100013494825603848418136101738330775905018906594329143185813252830388224arith_b8_v10 + 800107958604830787345088813906646207240151252754633145486506022643105792arith_b11_v13 + 390677714162515032883344147415354593378980103884098215569583018868704arith_b0_v2 - 26217937587563095239723870254092982918845276250263818911301829349969290592257arith_b26_v28 + 50006747412801924209068050869165387952509453297164571592906626415194112arith_b7_v9 + 3200431834419323149380355255626584828960605011018532581946024090572423168arith_b13_v15 + 25003373706400962104534025434582693976254726648582285796453313207597056arith_b6_v8 + 6554484396890773809930967563523245729711319062565954727825457337492322648064arith_b24_v26 + 13108968793781547619861935127046491459422638125131909455650914674984645296128arith_b25_v27 + 25603454675354585195042842045012678631684840088148260655568192724579385344arith_b16_v18 + 409655274805673363120685472720202858106957441410372170489091083593270165504arith_b20_v22 + 781355428325030065766688294830709186757960207768196431139166037737408arith_b1_v3 - 8arith_b30_v32 + 1600215917209661574690177627813292414480302505509266290973012045286211584arith_b12_v14 + 1638621099222693452482741890880811432427829765641488681956364334373080662016arith_b22_v24 + 819310549611346726241370945440405716213914882820744340978182167186540331008arith_b21_v23 + 12501686853200481052267012717291346988127363324291142898226656603798528arith_b5_v7 + 6250843426600240526133506358645673494063681662145571449113328301899264arith_b4_v6 - 16arith_b31_v33 + 51206909350709170390085684090025357263369680176296521311136385449158770688arith_b17_v19 + 204827637402836681560342736360101429053478720705186085244545541796635082752arith_b19_v21 - 4arith_b29_v31 + 1562710856650060131533376589661418373515920415536392862278332075474816arith_b2_v4 + 3277242198445386904965483781761622864855659531282977363912728668746161324032arith_b23_v25 + 102413818701418340780171368180050714526739360352593042622272770898317541376arith_b18_v20
[circ::target::r1cs::opt] Elim: main_f0_lex0_a_v0_v0 -> +1 - 1main_f0_lex0_b_v0_v1 + 4294967296arith_b32_v34
Final R1cs size: 33
